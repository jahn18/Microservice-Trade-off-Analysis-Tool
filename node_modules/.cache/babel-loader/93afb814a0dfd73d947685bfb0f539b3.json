{"ast":null,"code":"var _jsxFileName = \"/home/john/research/ReSeSS/Visualization/microservice-diff-tool/src/Pages/diffTool.jsx\";\nimport React from \"react\";\nimport CytoscapeComponent from 'react-cytoscapejs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass DiffTool extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    let elements = [];\n    const {\n      state\n    } = this.props.location;\n    console.log(\"This is the data recieved\");\n    console.log(state);\n\n    for (let i = 0; i < state.data.static_graph.nodes.length; i++) {\n      let classNode = state.data.static_graph.nodes[i];\n      elements.push({\n        data: {\n          id: classNode.id,\n          label: classNode.label\n        }\n      });\n    }\n\n    for (let i = 0; i < state.data.static_graph.links.length; i++) {\n      let edge = state.data.static_graph.links[i];\n      elements.push({\n        data: {\n          source: edge.source,\n          target: edge.target\n        }\n      });\n    } // elements = [\n    //     { \n    //         data: { \n    //             id: 'one', \n    //             label: 'Node 1'\n    //         } \n    //     },\n    //     { \n    //         data: { \n    //             id: 'two', \n    //             label: 'Node 2' \n    //         } \n    //     },\n    //     { data: { \n    //         source: 'one', \n    //         target: 'two', \n    //         } \n    //     }\n    //     ];\n\n\n    const layout = {\n      name: 'random'\n    };\n    return /*#__PURE__*/_jsxDEV(CytoscapeComponent, {\n      elements: elements,\n      layout: layout,\n      style: {\n        width: \"100%\",\n        height: \"750px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 16\n    }, this);\n  }\n\n}\n\nexport default DiffTool;","map":{"version":3,"sources":["/home/john/research/ReSeSS/Visualization/microservice-diff-tool/src/Pages/diffTool.jsx"],"names":["React","CytoscapeComponent","DiffTool","Component","constructor","props","render","elements","state","location","console","log","i","data","static_graph","nodes","length","classNode","push","id","label","links","edge","source","target","layout","name","width","height"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,kBAAP,MAA+B,mBAA/B;;;AAGA,MAAMC,QAAN,SAAuBF,KAAK,CAACG,SAA7B,CAAuC;AACnCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACH;;AAEDC,EAAAA,MAAM,GAAG;AACL,QAAIC,QAAQ,GAAG,EAAf;AACA,UAAM;AAACC,MAAAA;AAAD,QAAU,KAAKH,KAAL,CAAWI,QAA3B;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;;AACA,SAAI,IAAII,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGJ,KAAK,CAACK,IAAN,CAAWC,YAAX,CAAwBC,KAAxB,CAA8BC,MAAjD,EAAyDJ,CAAC,EAA1D,EAA8D;AAC1D,UAAIK,SAAS,GAAGT,KAAK,CAACK,IAAN,CAAWC,YAAX,CAAwBC,KAAxB,CAA8BH,CAA9B,CAAhB;AACAL,MAAAA,QAAQ,CAACW,IAAT,CAAc;AAAEL,QAAAA,IAAI,EAAE;AAACM,UAAAA,EAAE,EAAEF,SAAS,CAACE,EAAf;AAAmBC,UAAAA,KAAK,EAAEH,SAAS,CAACG;AAApC;AAAR,OAAd;AACH;;AACD,SAAI,IAAIR,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGJ,KAAK,CAACK,IAAN,CAAWC,YAAX,CAAwBO,KAAxB,CAA8BL,MAAjD,EAAyDJ,CAAC,EAA1D,EAA8D;AAC1D,UAAIU,IAAI,GAAGd,KAAK,CAACK,IAAN,CAAWC,YAAX,CAAwBO,KAAxB,CAA8BT,CAA9B,CAAX;AACAL,MAAAA,QAAQ,CAACW,IAAT,CAAc;AAAEL,QAAAA,IAAI,EAAE;AAACU,UAAAA,MAAM,EAAED,IAAI,CAACC,MAAd;AAAsBC,UAAAA,MAAM,EAAEF,IAAI,CAACE;AAAnC;AAAR,OAAd;AACH,KAZI,CAcL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,UAAMC,MAAM,GAAG;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAf;AACA,wBAAO,QAAC,kBAAD;AAAoB,MAAA,QAAQ,EAAEnB,QAA9B;AAAwC,MAAA,MAAM,EAAEkB,MAAhD;AAAwD,MAAA,KAAK,EAAE;AAACE,QAAAA,KAAK,EAAE,MAAR;AAAgBC,QAAAA,MAAM,EAAE;AAAxB;AAA/D;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAxCkC;;AA2CvC,eAAe1B,QAAf","sourcesContent":["import React from \"react\";\nimport CytoscapeComponent from 'react-cytoscapejs';\n\n\nclass DiffTool extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        let elements = [];\n        const {state} = this.props.location;\n        console.log(\"This is the data recieved\");\n        console.log(state);\n        for(let i = 0; i < state.data.static_graph.nodes.length; i++) {\n            let classNode = state.data.static_graph.nodes[i];\n            elements.push({ data: {id: classNode.id, label: classNode.label} });      \n        }\n        for(let i = 0; i < state.data.static_graph.links.length; i++) {\n            let edge = state.data.static_graph.links[i];\n            elements.push({ data: {source: edge.source, target: edge.target} });      \n        }\n\n        // elements = [\n        //     { \n        //         data: { \n        //             id: 'one', \n        //             label: 'Node 1'\n        //         } \n        //     },\n        //     { \n        //         data: { \n        //             id: 'two', \n        //             label: 'Node 2' \n        //         } \n        //     },\n        //     { data: { \n        //         source: 'one', \n        //         target: 'two', \n        //         } \n        //     }\n        //     ];\n        const layout = { name: 'random' };\n        return <CytoscapeComponent elements={elements} layout={layout} style={{width: \"100%\", height: \"750px\"}} />;\n    }\n}\n\nexport default DiffTool;"]},"metadata":{},"sourceType":"module"}