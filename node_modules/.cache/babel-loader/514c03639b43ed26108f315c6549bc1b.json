{"ast":null,"code":"var _jsxFileName = \"/home/john/research/ReSeSS/Visualization/microservice-diff-tool/src/Pages/index.jsx\";\nimport React from 'react';\nimport { BrowserRouter as Router, Switch, Route, Link, Redirect, useHistory, useLocation } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass FilePage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: null,\n      readFile: false,\n      fileReader: null\n    };\n    this.handleFileChosen = this.handleFileChosen.bind(this);\n    this.handleFileRead = this.handle;\n  }\n\n  handleFileRead(e) {\n    const content = fileReader.result;\n\n    try {\n      data = JSON.parse(content);\n    } catch (err) {\n      alert(\"The file given is not JSON!\");\n    }\n\n    console.log(data);\n    readFile = true;\n  }\n\n  handleFileChosen(file) {\n    fileReader = new FileReader();\n    fileReader.onloadend = handleFileRead;\n    fileReader.readAsText(file);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload-file\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Input JSON File\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        id: \"json-file\",\n        accept: \".json\",\n        onChange: e => handleFileChosen(e.target.files[0])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), readFile && /*#__PURE__*/_jsxDEV(Link, {\n        to: {\n          pathname: \"/tool\",\n          state: data\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 30\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default FilePage;","map":{"version":3,"sources":["/home/john/research/ReSeSS/Visualization/microservice-diff-tool/src/Pages/index.jsx"],"names":["React","BrowserRouter","Router","Switch","Route","Link","Redirect","useHistory","useLocation","FilePage","Component","constructor","props","state","data","readFile","fileReader","handleFileChosen","bind","handleFileRead","handle","e","content","result","JSON","parse","err","alert","console","log","file","FileReader","onloadend","readAsText","render","target","files","pathname"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACIC,aAAa,IAAIC,MADrB,EAEIC,MAFJ,EAGIC,KAHJ,EAIIC,IAJJ,EAKIC,QALJ,EAMIC,UANJ,EAOIC,WAPJ,QAQS,kBART;;;AAUA,MAAMC,QAAN,SAAuBT,KAAK,CAACU,SAA7B,CAAuC;AACnCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAE,IADG;AAETC,MAAAA,QAAQ,EAAE,KAFD;AAGTC,MAAAA,UAAU,EAAE;AAHH,KAAb;AAKA,SAAKC,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBC,IAAtB,CAA2B,IAA3B,CAAxB;AACA,SAAKC,cAAL,GAAsB,KAAKC,MAA3B;AACH;;AAEDD,EAAAA,cAAc,CAACE,CAAD,EAAI;AACd,UAAMC,OAAO,GAAGN,UAAU,CAACO,MAA3B;;AACA,QAAI;AACAT,MAAAA,IAAI,GAAGU,IAAI,CAACC,KAAL,CAAWH,OAAX,CAAP;AACH,KAFD,CAEE,OAAMI,GAAN,EAAW;AACTC,MAAAA,KAAK,CAAC,6BAAD,CAAL;AACH;;AACDC,IAAAA,OAAO,CAACC,GAAR,CAAYf,IAAZ;AACAC,IAAAA,QAAQ,GAAG,IAAX;AACH;;AAEDE,EAAAA,gBAAgB,CAACa,IAAD,EAAO;AACnBd,IAAAA,UAAU,GAAG,IAAIe,UAAJ,EAAb;AACAf,IAAAA,UAAU,CAACgB,SAAX,GAAuBb,cAAvB;AACAH,IAAAA,UAAU,CAACiB,UAAX,CAAsBH,IAAtB;AACH;;AAEDI,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,EAAE,EAAC,WAFP;AAGI,QAAA,MAAM,EAAC,OAHX;AAII,QAAA,QAAQ,EAAGb,CAAC,IAAIJ,gBAAgB,CAACI,CAAC,CAACc,MAAF,CAASC,KAAT,CAAe,CAAf,CAAD;AAJpC;AAAA;AAAA;AAAA;AAAA,cAFJ,EAQKrB,QAAQ,iBAAI,QAAC,IAAD;AACD,QAAA,EAAE,EAAE;AACAsB,UAAAA,QAAQ,EAAC,OADT;AAEAxB,UAAAA,KAAK,EAAEC;AAFP;AADH;AAAA;AAAA;AAAA;AAAA,cARjB;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAiBH;;AA/CkC;;AAkDvC,eAAeL,QAAf","sourcesContent":["import React from 'react';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link,\n    Redirect,\n    useHistory,\n    useLocation\n  } from \"react-router-dom\";\n\nclass FilePage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: null,\n            readFile: false,\n            fileReader: null\n        }\n        this.handleFileChosen = this.handleFileChosen.bind(this);\n        this.handleFileRead = this.handle\n    }\n\n    handleFileRead(e) {\n        const content = fileReader.result;\n        try {\n            data = JSON.parse(content);\n        } catch(err) {\n            alert(\"The file given is not JSON!\");\n        }\n        console.log(data);\n        readFile = true;\n    };\n\n    handleFileChosen(file) {\n        fileReader = new FileReader();\n        fileReader.onloadend = handleFileRead;\n        fileReader.readAsText(file);\n    };\n\n    render() {\n        return(\n            <div className='upload-file'>\n                <h3>Input JSON File</h3>\n                <input \n                    type=\"file\" \n                    id=\"json-file\" \n                    accept=\".json\" \n                    onChange={ e => handleFileChosen(e.target.files[0])}\n                />\n                {readFile && <Link \n                            to={{\n                                pathname:\"/tool\",\n                                state: data\n                            }} \n                            />}\n            </div>\n        );\n    }\n}\n\nexport default FilePage;"]},"metadata":{},"sourceType":"module"}